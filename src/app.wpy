<style lang="less">
    .container {
      height: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: space-between;
      box-sizing: border-box;
    }
</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'
import Auth from './assets/js/auth'

const store = configStore()
setStore(store)

export default class extends wepy.app {
    config = {
        pages: [
            'pages/mycenter/index',
            'pages/reserve/index',
            'pages/mall/index'
        ],
        window: {
            backgroundTextStyle: 'light',
            navigationBarBackgroundColor: '#fff',
            navigationBarTitleText: 'WeChat',
            navigationBarTextStyle: 'black'
        },
        tabBar: {
            color: "#AAAAAA",
            selectedColor: "#1cc466",
            list: [{
                pagePath: 'pages/reserve/index',
                iconPath: 'assets/image/icon_component.png',
                selectedIconPath: 'assets/image/icon_component_HL.png',
                text: '预约'
            }, {
                pagePath: 'pages/mall/index',
                iconPath: 'assets/image/icon_API.png',
                selectedIconPath: 'assets/image/icon_API_HL.png',
                text: '商城'
            }, {
                pagePath: 'pages/mycenter/index',
                iconPath: 'assets/image/icon_API.png',
                selectedIconPath: 'assets/image/icon_API_HL.png',
                text: '我的'
            }]
        }
    }
    globalData = {
        userInfo: null
    }

    // 全局请求拦截器
    constructor() {
        super()//将指针指向app
        this.use('requestfix')//处理并发
        this.use('promisify');//使用promise


        // 请求拦截
        this.intercept('request', {
            config(config) {
                // 设置请求url前缀
                config.url = 'http://192.168.11.82:3000' + config.url;
                config.timestamp = +new Date();
                wx.showLoading({
                    mask: true,
                    title: '加载中',
                })
                return config;
            },
            success(response) {
                if (response.statusCode && response.statusCode == 200) {
                    return response.data
                } else {
                    wx.showToast({
                        title: '服务器异常:' + response.statusCode,
                        icon: 'error',
                        duration: 2000
                    });
                }
            },
            fail(response) {
                wx.showToast({
                    title: '服务器异常',
                    icon: 'error',
                    duration: 2000
                });
            },
            complete(response) {
                wx.hideLoading()
            }
        })
    }

    onLaunch() {
    }
    // 获取用户信息
    async getUserData(callback) {
        const self = this;
        if (this.globalData.openId) {
            return this.globalData
        }
        await Auth.decryptUserInfo().then((response) => {
            self.globalData.userInfo = response.data;
            self.globalData.openId = response.data.openId;
        });
        return this.globalData
    }
    queryWXuser(phone) {
        return wepy.request({
            url: '/WXClass/queryWXuser',
            method: 'GET',
            data: {
                phone: phone
            }
        }).then((response) => {
            console.log(response);
        })
    }
}
</script>
